#!/bin/bash

# Ferramentas essenciais para manter um servidor Minecraft Bedrock sempre ativo.
# Este pacote fornece uma coleção de ferramentas e scripts necessários para garantir
# que um servidor Minecraft Bedrock esteja sempre ativo e funcionando de forma estável.
# Inclui suporte para reinicialização automática, backups regulares, e monitoramento
# de desempenho.
#
# Desenvolvido por Isac Gondim.
# Todos os direitos autorais reservados.
# LinkedIn: https://www.linkedin.com/in/isac-gondim-07a836227/

config_file="/etc/mineservertools/bedrock-server.conf"
log_file="/var/log/bedrock-backup.log"

backup() {
    local origem=$(grep "^server-dir=" "$config_file" | cut -d'=' -f2 | tr -d '"')
    local destino=$(grep "^backup-dir=" "$config_file" | cut -d'=' -f2 | tr -d '"')

    local data_hora=$(date +"%Y-%m-%d_%H-%M-%S")
    local nome_arquivo="server-data-$data_hora.zip"

    cd "$destino" || { echo "[$(date)] Erro ao acessar o diretório de destino." >> "$log_file"; exit 1; }

    find . -maxdepth 1 -type f -ctime +1 -exec rm -f {} +

    if [ $? -eq 0 ]; then
        echo "[$(date)] Arquivos antigos apagados" >> "$log_file"
    else
        echo "[$(date)] Erro ao apagar arquivos antigos" >> "$log_file"
    fi

    echo "Iniciando backup..."

    local temp_zip="/tmp/server-data-temp.zip"
    zip -r "$temp_zip" "$origem/" > /dev/null

    local tamanho_zip=$(du -b "$temp_zip" | awk '{print $1}')

    pv -s "$tamanho_zip" "$temp_zip" > "$destino/$nome_arquivo"

    if [ $? -eq 0 ]; then
        echo "[$(date)] Backup concluído com sucesso: $nome_arquivo" >> "$log_file"
        rm "$temp_zip"
    else
        echo "[$(date)] Erro ao fazer o backup." >> "$log_file"
    fi
}

schedule_tasks() {
    echo "Agendando tarefas automáticas..."
    (crontab -l ; echo "0 3 * * * /usr/bin/bedrock-tools/tools/backup-server backup") | crontab -
    echo "[$(date)] Tarefas agendadas." >> "$log_file"
}

case "$1" in
    backup)
        backup
        ;;
    schedule)
        schedule_tasks
        ;;
    *)
        echo "Uso: $0 {backup|schedule}"
        exit 1
        ;;
esac

exit 0