#!/bin/bash

# Ferramentas essenciais para manter um servidor Minecraft Bedrock sempre ativo.
# Este pacote fornece uma cole√ß√£o de ferramentas e scripts necess√°rios para garantir
# que um servidor Minecraft Bedrock e Java Edition esteja sempre ativo e funcionando de forma est√°vel.
# Inclui suporte para reinicializa√ß√£o autom√°tica, backups regulares, e monitoramento
# de desempenho.
#
# Desenvolvido por Isac Gondim e Pedro Felipe
# Todos os direitos autorais reservados.
# LinkedIn: https://www.linkedin.com/in/isac-gondim-07a836227/ 

show_main_menu() {
    local choice

    while true; do
        choice=$(dialog --clear \
                        --backtitle "Mine Server Tools" \
                        --title "\Zb\Z1Menu Principal\Zn" \
                        --colors \
                        --nocancel \
                        --menu "\nEscolha uma op√ß√£o:" \
                        15 60 5 \
                        "1" "üóÇÔ∏è  \Zb\Z4Backup\Zn" \
                        "2" "üîÑ  \Zb\Z4Atualiza√ß√£o\Zn" \
                        "3" "‚öôÔ∏è  \Zb\Z4Sistema\Zn" \
                        "4" "üö™  \Zb\Z4Sair\Zn" \
                        2>&1 >/dev/tty)

        case $choice in
            1)
                show_backup_menu
                ;;
            2)
                update_function
                ;;
            3)
                system_function
                ;;
            4)
                clear
                exit 0
                ;;
        esac
    done
}

show_backup_menu() {
    local choice

    while true; do
        choice=$(dialog --clear \
                        --backtitle "Mine Server Tools" \
                        --title "\Zb\Z1Menu de Backup\Zn" \
                        --colors \
                        --nocancel \
                        --menu "\nEscolha uma op√ß√£o:" \
                        15 60 4 \
                        "1" "üíæ  \Zb\Z4Fazer backup agora\Zn" \
                        "2" "üîç  \Zb\Z4Verificar backups\Zn" \
                        "3" "üîô  \Zb\Z4Voltar\Zn" \
                        2>&1 >/dev/tty)

        case $choice in
            1)
                backup_now
                ;;
            2)
                check_backups
                ;;
            3)
                return
                ;;
        esac
    done
}

backup_now() {
    dialog --colors --title "\Zb\Z1Fazendo Backup\Zn" --programbox "\nAguarde enquanto o backup est√° sendo realizado..." 20 70 < <(backup-server --backup)
}

check_backups() {
    local output
    output=$(backup-server --view)
    local height width
    height=$(echo "$output" | wc -l)
    width=$(echo "$output" | awk '{ if (length > L) L = length } END { print L }')
    height=$((height + 10))
    width=$((width + 10))
    dialog --colors --title "\Zb\Z1Verificar Backups\Zn" --msgbox "$output" "$height" "$width"
}

update_function() {
    dialog --colors --nocancel --msgbox "\n\Zb\Z1Funcionalidade de Atualiza√ß√£o ainda n√£o implementada.\Zn" 10 40
}

system_function() {
    dialog --colors --nocancel --msgbox "\n\Zb\Z1Funcionalidade de Sistema ainda n√£o implementada.\Zn" 10 40
}

if ! command -v dialog &> /dev/null
then
    echo "O comando 'dialog' n√£o foi encontrado. Por favor, instale o 'dialog' e tente novamente."
    exit 1
fi

show_main_menu

